<?import rel_prefix, modsort, files ?>

<header>
<?if klass.parent ?>
	<?if klass.full_name.index('::') ?>
	<h2 class="namespace">
	<?call klass.full_name.sub(/^(.*::).*/, '\1') ?>
	</h2>
	<?end if ?>
	<h1 class="[?call klass.type ?] title is-1">
		<span class="name"><?call klass.name ?></span>
			<span class="tag is-info"><?call klass.type ?></span>
	</h1>
<?end if ?>
</header>

<table class="class-metadata table box">
	<tbody>
		<?unless klass.module? ?>
		<tr>
			<td>Superclass</td>
			<?if klass.superclass.respond_to?(:path) ?>
			<td class="superclass"><a href="[?attr rel_prefix ?]/[?call klass.superclass.path ?]"><?call
				klass.superclass.full_name ?></a></td>
			<?else?>
			<td class="superclass"><?call klass.superclass ?></td>
			<?end if ?>
		</tr>
		<?end unless ?>

		<?unless klass.includes.empty? ?>
		<tr>
			<td>Included Modules</td>
			<td class="included-modules">
				<ul>
				<?for inc in klass.includes ?>
					<?if inc.module.respond_to?(:path) ?>
					<li class="include"><a href="[?call klass.aref_to(inc.module.path) ?]"><?call
						inc.module.full_name ?></a></li>
					<?else ?>
					<li class="include"><?call inc.name ?></li>
					<?end if ?>
				<?end for ?>
				</ul>
			</td>
		</tr>
		<?end unless ?>

		<?unless klass.extends.empty? ?>
		<tr>
			<td>Extended With</td>
			<td class="extended-modules">
				<ul>
				<?for ext in klass.extends.uniq ?>
					<?if ext.module.respond_to?(:path) ?>
					<li class="extend"><a href="[?call klass.aref_to(ext.module.path) ?]"><?call
						ext.module.full_name ?></a></li>
					<?else ?>
					<li class="extend"><?call ext.name ?></li>
					<?end if ?>
				<?end for ?>
			</td>
		</tr>
		<?end unless ?>

	</tbody>
</table>

<?call klass.description ?>
</section>


<section class="api content">

<?for section, constants, attrs in klass.each_section ?>
<div id="<?call section.aref ?>">
	<?if section.title ?>
		<header>
			<h3 class="title is-3"><?call section.title ?></h3>
			<span class="section-click-top">
				<a href="#top">&uarr; top</a>
			</span>
		</header>
	<?end if ?>

   <?if section.comment ?>
    <p class="description">
		<?call section.description ?>
    </p>
   <?end if ?>

	<?if constants.any?{|c| c.display? } ?>
		<!-- Constants -->
		<section class="constants-list">
			<header>
				<h3>Constants</h3>
			</header>

			<dl class="constants">
			<?for const in constants.select {|c| c.display? } ?>
				<dt id="[?call const.name ?]"><i class="icon-generic"></i><?call const.name ?></dt>
				<?if const.comment ?>
				<dd class="description"><?call const.description.strip ?></dd>
				<?else ?>
				<dd class="description missing-docs">(Not documented)</dd>
				<?end ?>
			<?end ?>
			</dl>

		</section>
	<?end ?>

	<?if attrs.any?{|a| a.display? } ?>
		<!-- Attributes -->
		<section class="attributes-list">
			<header>
				<h3>Attributes</h3>
			</header>
			<dl class="attributes">
			<?for attrib in attrs.select {|a| a.display? } ?>
				<dt id="[?call attrib.aref ?]"><i class="icon-generic"></i><?call attrib.name ?> <span
					class="attribute-access-type [?call attrib.rw.downcase ?]"><?call 
						attrib.rw ?></span></dt>
				<?if attrib.comment ?>
				<dd class="description"><?call attrib.description.strip ?></dd>
				<?else ?>
				<dd class="description missing-docs">(Not documented)</dd>
				<?end ?>
			<?end ?>
			</dl>
		</section>
	<?end if ?>

		<!-- Methods -->
	<?for scope, visibilities in klass.methods_by_type( section ) ?>
		<?for visibility, methodlist in visibilities ?>

		<?unless methodlist.empty? ?>
		<section class="[?attr visibility ?]-methods [?attr scope ?]-methods methods">
			<header>
				<h3><?call visibility.to_s.capitalize ?> <?call scope.capitalize ?> Methods</h3>
			</header>

			<?for meth in methodlist ?>
			<a name="[?call meth.aref ?]"></a>
			<div id="<?call meth.aref ?>-doc" class="method[?if meth.is_alias_for
				?] method-alias[?end if ?]">

				<header>
				<?if meth.call_seq ?>
					<?for call_seq, i in meth.call_seq.strip.split("\n") ?>
					<i class="fas fa-chevron-right"></i>
					<span class="method-callseq"
          ><?call
          call_seq.strip.gsub( /^\w+\./m, '').gsub(/->/, '&rarr;')
           ?></span><br />
					<?end for ?>
				<?else ?>
					<i class="fas fa-chevron-right"></i>
					<span class="method-name"><?escape meth.name ?></span><span 
						class="method-args"><?escape meth.param_seq ?></span>
				<?end if ?>
				</header>

				<div class="method-description">
				<?if meth.comment ?>
					<?call meth.description.strip ?>
				<?else ?>
					<p class="missing-docs">(Not documented)</p>
				<?end ?>

				<?if meth.token_stream ?>
					<div class="method-source-code message" id="[?call meth.html_name ?]-source">
						<pre class="prettyprint linenums message-body"><code 
							class="language-ruby"><?call meth.markup_code ?></code></pre>
					</div>
				<?end ?>
				</div>

				<?unless meth.aliases.empty? ?>
				<div class="aliases">
					Also aliased as:
					<?for aka in meth.aliases ?>
						<?if aka.parent ?>
						<a href="[?call klass.aref_to(aka.path) ?]"><?escape aka.name ?></a>
						<?else ?>
						<?escape aka.name ?>
						<?end if ?><?unless aka == meth.aliases.last ?>, <?end unless ?>
					<?end for ?>
				</div>
				<?end ?>

				<?if meth.is_alias_for ?>
				<div class="aliases">
					Alias for: <a href="[?call klass.aref_to( meth.is_alias_for.path ) 
						?]"><?escape meth.is_alias_for.name ?></a>
				</div>
				<?end if ?>
			</div>
			<?end for ?>

		</section>
		<?end unless ?>

		<?end for ?>
	<?end for ?>
		</section>

<?end for ?>
</div>

